@startuml
skinparam classAttributeIconSize 0
skinparam roundcorner 0
skinparam linetype ortho
skinparam groupInheritance 4

class TreasureHunter{
-TreasureHunterGame
-View
}

class View{
}

class Interactable{
}

class Resources{
+loadBackground()
+loadImages()
+loadSounds()
}

class TreasureHunterGame{
-Store;
-Player;
-Hook;
-ArrayList<Treasure>;
-Snapshot
}

class Store{
+pay(Player,int);
+improveHook(Player,Hook);
+improveEngine(Player,Engine);
}

class Player{
String name;
int balance;
}

class Hook{
-Coordinate position;
-Engine engine;
-int length;
-String nameImage
}

abstract class Movable{
-Coordinate position;
-Engine engine;
-int loweredMeter
-boolean moveRight
+setState(Coordinate,Engine);
}

class Coordinate{
-int x;
-int y;
}

class Engine{
-float fuel;
-int power;
}

class Treasure{
-TreasureType type;
-Coordinate position;
-int rarity;
-int weight;
}

enum TreasureType{
}

class Snapshot{
-Player playerState;
-Hook hookState;
ArrayList<Treasure> treasureState;
+saveGame();
}

abstract class Persistence{
+Player playerUpload();
+Hook hookUpload();
+ArrayList<Treasure> treasureListUpload();
}

class DirectorTreasure{
+constructTreasure();
}

class TreasureBuilder{
-TreasureType type;
-Coordinate position;
-int rarity;
-int weight;
-int price;
-String nameImage;
+Treasure getResults();
}

interface Builder{
}

TreasureHunterGame *--> Store
TreasureHunterGame *--> Player
TreasureHunterGame *--> Hook
TreasureHunterGame *--> Treasure
TreasureHunterGame *--> Snapshot

TreasureHunter o--> TreasureHunterGame
TreasureHunter o--> View

View --|> Interactable
View *--> Resources
View ..> TreasureHunterGame

Interactable ..> Resources

Player o--> Treasure

Hook *--> Coordinate
Hook *--> Engine
Hook --|> Movable

Movable o--> Coordinate
Movable o--> Engine

Treasure ..> TreasureType
Treasure o--> Coordinate

Snapshot o--> Player
Snapshot o--> Hook
Snapshot o--> Treasure
Snapshot --|> Persistence

DirectorTreasure ..> Builder

TreasureBuilder ..> Builder
TreasureBuilder --> Treasure
@enduml